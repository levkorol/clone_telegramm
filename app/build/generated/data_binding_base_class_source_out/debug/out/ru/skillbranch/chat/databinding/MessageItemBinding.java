// Generated by view binder compiler. Do not edit!
package ru.skillbranch.chat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.skillbranch.chat.R;

public final class MessageItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout blockReceivedImage;

  @NonNull
  public final ConstraintLayout blockReceivedMessage;

  @NonNull
  public final ConstraintLayout blockUserImage;

  @NonNull
  public final ConstraintLayout blockUserMessage;

  @NonNull
  public final ImageView chatReceivedImage;

  @NonNull
  public final TextView chatReceivedImageMessageTime;

  @NonNull
  public final TextView chatReceivedMessage;

  @NonNull
  public final TextView chatReceivedTime;

  @NonNull
  public final ImageView chatUserImage;

  @NonNull
  public final TextView chatUserImageMessageTime;

  @NonNull
  public final TextView chatUserMessage;

  @NonNull
  public final TextView chatUserTime;

  private MessageItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout blockReceivedImage, @NonNull ConstraintLayout blockReceivedMessage,
      @NonNull ConstraintLayout blockUserImage, @NonNull ConstraintLayout blockUserMessage,
      @NonNull ImageView chatReceivedImage, @NonNull TextView chatReceivedImageMessageTime,
      @NonNull TextView chatReceivedMessage, @NonNull TextView chatReceivedTime,
      @NonNull ImageView chatUserImage, @NonNull TextView chatUserImageMessageTime,
      @NonNull TextView chatUserMessage, @NonNull TextView chatUserTime) {
    this.rootView = rootView;
    this.blockReceivedImage = blockReceivedImage;
    this.blockReceivedMessage = blockReceivedMessage;
    this.blockUserImage = blockUserImage;
    this.blockUserMessage = blockUserMessage;
    this.chatReceivedImage = chatReceivedImage;
    this.chatReceivedImageMessageTime = chatReceivedImageMessageTime;
    this.chatReceivedMessage = chatReceivedMessage;
    this.chatReceivedTime = chatReceivedTime;
    this.chatUserImage = chatUserImage;
    this.chatUserImageMessageTime = chatUserImageMessageTime;
    this.chatUserMessage = chatUserMessage;
    this.chatUserTime = chatUserTime;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MessageItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MessageItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.message_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MessageItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.block_received_image;
      ConstraintLayout blockReceivedImage = rootView.findViewById(id);
      if (blockReceivedImage == null) {
        break missingId;
      }

      id = R.id.block_received_message;
      ConstraintLayout blockReceivedMessage = rootView.findViewById(id);
      if (blockReceivedMessage == null) {
        break missingId;
      }

      id = R.id.block_user_image;
      ConstraintLayout blockUserImage = rootView.findViewById(id);
      if (blockUserImage == null) {
        break missingId;
      }

      id = R.id.block_user_message;
      ConstraintLayout blockUserMessage = rootView.findViewById(id);
      if (blockUserMessage == null) {
        break missingId;
      }

      id = R.id.chat_received_image;
      ImageView chatReceivedImage = rootView.findViewById(id);
      if (chatReceivedImage == null) {
        break missingId;
      }

      id = R.id.chat_received_image_message_time;
      TextView chatReceivedImageMessageTime = rootView.findViewById(id);
      if (chatReceivedImageMessageTime == null) {
        break missingId;
      }

      id = R.id.chat_received_message;
      TextView chatReceivedMessage = rootView.findViewById(id);
      if (chatReceivedMessage == null) {
        break missingId;
      }

      id = R.id.chat_received_time;
      TextView chatReceivedTime = rootView.findViewById(id);
      if (chatReceivedTime == null) {
        break missingId;
      }

      id = R.id.chat_user_image;
      ImageView chatUserImage = rootView.findViewById(id);
      if (chatUserImage == null) {
        break missingId;
      }

      id = R.id.chat_user_image_message_time;
      TextView chatUserImageMessageTime = rootView.findViewById(id);
      if (chatUserImageMessageTime == null) {
        break missingId;
      }

      id = R.id.chat_user_message;
      TextView chatUserMessage = rootView.findViewById(id);
      if (chatUserMessage == null) {
        break missingId;
      }

      id = R.id.chat_user_time;
      TextView chatUserTime = rootView.findViewById(id);
      if (chatUserTime == null) {
        break missingId;
      }

      return new MessageItemBinding((ConstraintLayout) rootView, blockReceivedImage,
          blockReceivedMessage, blockUserImage, blockUserMessage, chatReceivedImage,
          chatReceivedImageMessageTime, chatReceivedMessage, chatReceivedTime, chatUserImage,
          chatUserImageMessageTime, chatUserMessage, chatUserTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
